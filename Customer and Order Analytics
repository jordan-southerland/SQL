#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customers and order data. 

#How many orders were placed in January?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid)=6
AND orderid <> 'OrderID';

#How many of those orders were for an iPhone?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderid)=6
AND orderid <> 'OrderID';

#Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT acctnum 
FROM BIT_DB.customers AS CS
INNER JOIN BIT_DB.FebSales AS FS
ON FS.orderID = CS.order_id
WHERE length(orderID = 6)
AND orderID <> 'OrderID';

#Which product was the cheapest one sold in January, and what was the price? 
SELECT distinct product, MIN(price) AS price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;

#What is the total revenue for each product sold in January?
SELECT DISTINCT Product, ROUND(SUM(Quantity)*price,2) AS total_revenue
FROM BIT_DB.JanSales
GROUP BY Product;

#Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, Quantity, SUM(Quantity)*price AS Revenue 
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

#How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers?
SELECT COUNT(distinct C.acctnum) AS Orders , AVG(Quantity*price) AS Average_Spent
FROM BIT_DB.FebSales FS
LEFT JOIN BIT_DB.customers C
ON C.order_id = FS.orderid
WHERE FS.Quantity>2
AND length(C.order_id)=6
AND orderID <> 'OrderID';
