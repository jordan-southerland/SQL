# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#I determined the avg danceability by artist and track. 
SELECT artist_name, track_name, AVG(danceability)
FROM Spotifydata
GROUP BY artist_name, track_name

#I determined who the Top 10 artists are by popularity
SELECT artist_name, popularity FROM Spotifydata
ORDER BY (popularity) desc LIMIT 10

#I determined which song is the longest and who the artist is
SELECT MAX(duration_ms), artist_name, track_name
FROM spotifydata

#Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, label them as a “Top Star”.
WITH AvgPopCTE AS(
SELECT artist_name, AVG(popularity) AS Popularity
FROM spotifydata
GROUP BY artist_name )

SELECT artist_name, Popularity, 
CASE WHEN popularity >= 90 THEN 'Top Star' ELSE NULL
END AS Status
FROM AvgPopCTE;
